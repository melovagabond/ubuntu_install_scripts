- name: add apt repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_lines: cat "{{ app_repos_list }}"
  become: yes

- name: update apt packages
  apt:
        name: "*"
        state: "latest"
        autoclean: true
        autoremove: true
        update_cache: true
  become: yes

- name: install apt packages
  apt:
        name: "{{ item }}"
        state: present
  with_lines: cat "{{ list_of_packages }}"
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
  become: yes


- name: create Apps and Projects folder in home
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - ~Apps
    - ~/Projects
    - ~/Apps/Tools

- name: Make all .sh files executable
  shell: sh -c "chmod +x {{ files }}/*.sh"
  become: yes
  
# ##
# OH-MY-ZSH INSTALL
# ##

- name: Install ZSH Auto Complete
  shell: wget https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/zsh-autosuggestions.zsh -P ~/.oh-my-zsh/custom/
  args:
        executable: /bin/bash

- name: Copy Oh My ZSH Aliases
  copy:
    src: ../files/aliases.zsh
    dest: ~/.oh-my-zsh/custom/aliases.zsh

- name: Copy Parrot Theme
  copy:
    src: ../files/parrot.zsh-theme
    dest: ~/.oh-my-zsh/themes/parrot.zsh-theme

- name: Activate ZSH
  shell: chsh -s $(which zsh)
  args:
        executable: /bin/bash
  ignore_errors: yes

###

- name: Install Vagrant and Terraform (latest)
  shell: "{{ hashi }}"
  args:
        executable: /bin/bash
  become: yes

- name: Make changes for graphics card
  shell: "{{ graphics_card }}"
  args:
        executable: /bin/bash
  become: yes

- name: Install Wine
  shell: "{{ wine }}"
  args:
        executable: /bin/bash
  become: yes
  ignore_errors: yes

- name: Download super slicer to app folder
  shell: wget -O https://github.com/supermerill/SuperSlicer/releases/download/2.3.56.9/SuperSlicer-ubuntu_18.04-2.3.56.9.AppImage ~/Apps/
  args:
        executable: /bin/bash
  ignore_errors: yes

- name: Clone Git repos
  git:
    repo: "{{ item }}"
    dest: ~/Apps/Tools/{{ item }}
  with_lines: cat "{{ git_repos }}"
  ignore_errors: yes

- name: Install specified python requirements
  pip:
        requirements: "{{ pip_requirements }}"