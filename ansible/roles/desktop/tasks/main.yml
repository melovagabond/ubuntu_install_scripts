- name: add apt repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_lines: cat "{{ app_repos_list }}"
  become: true

- name: update apt packages
  apt:
        name: "*"
        state: "latest"
        autoclean: true
        autoremove: true
        update_cache: true
  become: true

- name: install apt packages
  apt:
        name: "{{ item }}"
        state: present
  with_lines: cat "{{ list_of_packages }}"
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
  become: true


- name: create Apps and Projects folder in home
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - ~/Apps
    - ~/Projects
    - ~/Apps/Tools

- name: Make all .sh files executable
  shell: sh -c "chmod +x {{ files }}/*.sh"
  become: true
  
###
# OH-MY-ZSH INSTALL
###


# - name: Install Oh My ZSH
#   shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#   args:
#         executable: /bin/bash

# - name: Install ZSH Auto Complete
#   shell: wget https://raw.githubusercontent.com/zsh-users/zsh-autosuggestions/master/zsh-autosuggestions.zsh -P ~/.oh-my-zsh/custom/
#   args:
#         executable: /bin/bash

# - name: Copy Oh My ZSH Aliases
#   copy:
#     src: ../files/aliases.zsh
#     dest: ~/.oh-my-zsh/custom/aliases.zsh

# - name: Copy Parrot Theme
#   copy:
#     src: ../files/parrot.zsh-theme
#     dest: ~/.oh-my-zsh/themes/parrot.zsh-theme

# - name: Copy Auto Suggest
#   copy:
#     src: ../files/zsh-autosuggestions.zsh
#     dest: ~/.oh-my-zsh/custom/zsh-autosuggestions.zsh

# - name: Activate ZSH
#   shell: chsh -s $(which zsh)
#   args:
#         executable: /bin/bash
#   ignore_errors: true

###

- name: Install Vagrant and Terraform (latest)
  shell: "{{ hashi }}"
  args:
        executable: /bin/bash
  become: true

- name: Make changes for graphics card
  shell: "{{ graphics_card }}"
  args:
        executable: /bin/bash
  become: true

- name: Install Wine
  shell: "{{ wine }}"
  args:
        executable: /bin/bash
  become: true
  ignore_errors: true

- name: Download super slicer to app folder
  get_url:
    url: https://github.com/supermerill/SuperSlicer/releases/download/2.3.56.9/SuperSlicer-ubuntu_18.04-2.3.56.9.AppImage
    dest: ~/Apps/SuperSlicer.AppImage
    mode: '0755'
  ignore_errors: true

- name: Clone Git repos
  git:
    repo: "{{ item.split()[0] }}"
    dest: "~/Apps/Tools/{{ item.split()[1] if item.split()|length > 1 else item.split()[0].split('/')[-1].replace('.git', '') }}"
  with_lines: cat "{{ git_repos }}"
  ignore_errors: true

- name: Install specified python requirements
  pip:
        requirements: "{{ pip_requirements }}"